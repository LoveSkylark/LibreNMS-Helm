---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-application
  labels:
{{ include "common.labels" . | indent 4 }}
spec:
  type: NodePort
  selector:
    app: application
  ports:
    - name: application
      protocol: TCP
      nodePort: {{ .Values.application.nPort }}
      port: 8000
      targetPort: application
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-application
  labels:
{{ include "common.labels" . | indent 4 }}
    app: application
spec:
  replicas: {{ .Values.application.replicas }}
  selector:
    matchLabels:
      app: application
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: application
    spec:
      hostname: {{ .Release.Name }}-application
      restartPolicy: Always
      containers:
        - name: {{ .Release.Name }}-application
          image: {{ .Values.librenms.image | quote }}
          envFrom:
            - configMapRef:
                name: librenms-cfg
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: mysql_user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: mysql_password
            - name: LIBRENMS_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: redis_password
            - name: LIBRENMS_BASE_URL
              value: {{ .Values.application.baseURL | quote }}
            - name: LIBRENMS_WEATHERMAP
              value: {{ .Values.application.weathermap | quote }}
            - name: LIBRENMS_WEATHERMAP_SCHEDULE
              value: {{ .Values.application.weathermapSchedule | quote }}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
          ports:
            - name: application
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: {{ .Release.Name }}-rrdcached
              mountPath: /data
      volumes:
        - name: {{ .Release.Name }}-rrdcached
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-rrdcached-claim
